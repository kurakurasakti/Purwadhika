{"version":3,"sources":["2.reducers/userGlobal.js","2.reducers/productGlobal.js","2.reducers/kataGlobal.js","2.reducers/index.js","components/footer.js","components/header.js","components/form.js","1.actions/userAction.js","components/homepage.js","components/product.js","components/txtarea.js","1.actions/kataAction.js","components/latihanDua.js","components/latihanTiga.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","username","email","productId","namaProduct","count","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","payload","product","jumlah","Footer","number","handleState","_this","setState","react_default","a","createElement","style","position","left","bottom","height","backgroundColor","width","Component","Header","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","isOpen","Navbar","color","dark","expand","Link","to","NavbarBrand","nama","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","textDecoration","kata","href","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","React","connect","buah","Form","handleButton","refs","value","fnUbahUser","handleChange","event","htmlFor","class","onChange","id","aria-describedby","placeholder","ref","fontSize","Homepage","_this$props$nama","Product","listProduct","getProduct","Axios","get","then","res","data","catch","err","console","log","renderProduct","map","val","harga","fn","fnSetState","txtarea","text","fnCountWord","marginTop","es_Form","FormGroup","Label","for","Input","name","str","split","lentgh","latihan2","handleOnchange","btnMin","btnPlus","Button","size","latihan3","handleOnChange","newOne","textarea","replace","App","btnClick","alert","header","Route","path","component","exact","TxtArea","LatihanDua","LatihanTiga","footer","Boolean","window","location","hostname","match","variabelGlobal","createStore","GlobalState","ReactDOM","render","es","store","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd97ef5b.chunk.js","sourcesContent":["const INITIAL_STATE = {username : 'Seto' , email : 'email'}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    // eslint-disable-next-line eqeqeq\r\n    if (action.type == 'UBAH_USER') {\r\n        return{...INITIAL_STATE, username : action.payload}\r\n    }\r\n    else{\r\n        return state\r\n    }\r\n    \r\n}","const INITIAL_STATE = {productId : '', namaProduct : 'Jeruk'}\r\n\r\nexport default(state=INITIAL_STATE , action) => {\r\n    return state\r\n}","const INITIAL_STATE = {count : 0}\r\n\r\nexport default(state=INITIAL_STATE , action) => {\r\n    if (action.type === 'HITUNG_KATA') {\r\n        return {...INITIAL_STATE, count : action.payload}\r\n    } else {\r\n        return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport UserState from './userGlobal'\r\nimport ProductState from './productGlobal'\r\nimport CountWord from './kataGlobal'\r\n\r\n\r\nexport default combineReducers({\r\n    user: UserState,\r\n    product : ProductState,\r\n    jumlah : CountWord\r\n});\r\n","// Class Components\r\n// Props // properties => Transfer data dari parent ke child\r\n\r\nimport React,{Component} from 'react'\r\n\r\nclass Footer extends Component{\r\n    state = {number : 1}\r\n    handleState = () => {\r\n        this.setState({number : this.state.number+1})\r\n    }\r\n\r\n\r\n    render(){   \r\n        return(\r\n            <div style={{position:'fixed',left:'0px',bottom:'0px',height:'100px',backgroundColor:'black',width:'100%'}}> \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n\r\n\r\n// Function Components","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem } from 'reactstrap';\r\n\r\n  import { Link } from 'react-router-dom'\r\n  import { connect } from 'react-redux'\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"primary\" dark expand=\"md\">\r\n        <Link to='/'><NavbarBrand style={{color:'white'}}>{this.props.nama}</NavbarBrand></Link>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <Link to='/form'><NavLink  style={{color:'white' , textDecoration:'none'}}>Login</NavLink></Link> \r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink style={{color:'white'}}>{this.props.kata} Words</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">Register</NavLink>\r\n              </NavItem>\r\n              <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Options\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    Option 1\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    Option 2\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>\r\n                    Reset\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {nama : state.user.username,\r\n          email : state.user.email,\r\n          buah : state.product.namaProduct,\r\n          kata : state.jumlah.count\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header)\r\n","import React from 'react'\r\nimport './../support/css/cssform.css'\r\nimport { fnUbahUser } from './../1.actions';\r\nimport {connect} from 'react-redux';\r\n//import { connect } from 'net';\r\n\r\n// inline\r\n// external\r\nclass Form extends React.Component{\r\n\r\n    handleButton = () => {\r\n        var username = this.refs.username.value\r\n        this.props.fnUbahUser(username)\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        var username = this.refs.username.value\r\n        this.setState({username})\r\n    }\r\n\r\n    render(){\r\n        var hidden = {color:'blue',fontSize:'30px'}\r\n        return(\r\n            <div className='container'>\r\n                <div className='row justify-content-center'>\r\n                    <div className='col-md-4 mt-4'>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputEmail1\" class='merah'>Email address</label>\r\n                                <input type=\"email\" onChange={this.handleChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" ref='username' />\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputPassword1\" style={hidden}>Password</label>\r\n                                <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                            </div>\r\n                            <div className=\"form-group form-check\">\r\n                                <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                                <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Check me out</label>\r\n                            </div>\r\n                            <input type=\"button\" className=\"btn btn-primary\" onClick={this.handleButton} value='submit' />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{fnUbahUser})(Form)","export const fnUbahUser = (nama) =>{\r\n    return{\r\n        type : 'UBAH_USER',\r\n        payload : nama //sesuatu yang di kirim (berati ini kirim parameter berupa nama.)\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Homepage extends React.Component{\r\n    render(){\r\n    var {username,email} = this.props.nama \r\n        return(\r\n            <div>\r\n                <h1>Selamat Datang Di Website {this.props.nama.username}</h1>\r\n                <h2>{this.props.nama.email}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {nama : state.user}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Homepage);","import React from 'react'\r\nimport Axios from 'axios'\r\n\r\nclass Product extends React.Component{\r\n    state = {user:'Orang Asing' , listProduct : []}\r\n\r\n    componentDidMount(){\r\n        this.getProduct()\r\n    }\r\n\r\n    getProduct = () => {\r\n        Axios.get('http://localhost:2000/product')\r\n        .then((res) => \r\n            this.setState({listProduct : res.data})\r\n        )\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    renderProduct = () => {\r\n        var jsx = this.state.listProduct.map((val) => {\r\n            return(\r\n                <div>\r\n                    <h3>{val.nama}</h3>\r\n                    <h4>{val.harga}</h4>\r\n                </div>\r\n            )\r\n        })\r\n        return jsx\r\n    }\r\n    // componentWillMount(){\r\n    //     // Sebelum render\r\n    //     console.log('Ini Will Mount '+ this.state.user);\r\n    // }\r\n\r\n    // componentWillUpdate(){\r\n    //     // setelah ada setState / Perubahan dan sebelum render\r\n    //     console.log('Ini Will Update '+ this.state.user);\r\n    // }\r\n    // componentDidUpdate(){\r\n    //     // setelah ada setState / Perubahan dan setelah render\r\n    //     console.log('Ini Did Update '+ this.state.user);        \r\n    // }\r\n    \r\n    fn =() => {\r\n        console.log('render')\r\n    }\r\n\r\n    fnSetState = () => {\r\n        this.setState({user:'joni'})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Products</h1>\r\n                {this.renderProduct()}\r\n                <input type='button' value='setState' onClick={this.fnSetState}/>\r\n                {this.fn()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport './../support/css/cssform.css'\r\n//import { fnUbahUser } from './../1.actions';\r\nimport {connect} from 'react-redux';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport {fnCountWord} from './../1.actions'\r\n\r\nclass txtarea extends React.Component {\r\n    handleChange = () =>{\r\n       //cuma get value dari textarea\r\n        var kata = this.refs.text.value\r\n        this.props.fnCountWord(kata)\r\n    }\r\n    render() {\r\n      return (\r\n        <div className=\"container\" style={{marginTop:'30px'}}>\r\n            <Form className=\"col-md-6\">\r\n                <FormGroup>\r\n                    <Label for=\"exampleText\" >Text Area</Label>\r\n                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={this.handleChange} ref='text' />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"exampleText\">{this.props.kata} Word</Label>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n        \r\n      )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        kata : state.jumlah.count\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{fnCountWord})(txtarea)\r\n","export const fnCountWord = (str) =>{\r\n    var arr = str.split(' ')\r\n    var jumlahKata = arr.lentgh\r\n    return{\r\n        type : 'HITUNG_KATA',\r\n        payload :  jumlahKata \r\n        //payload sesuatu yang di kirim (berati ini kirim parameter berupa nama.)\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nclass latihan2 extends React.Component{\r\n    //buat state dulu\r\n    //abis itu bikin function nya terus baru setState satu\"\r\n\r\n    handleOnchange = (props) =>{\r\n        \r\n    }\r\n    btnMin = () =>{\r\n\r\n    }\r\n    btnPlus = () =>{\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <FormGroup className='col-sm-12 col-md-6 offset-md-3' style={{marginTop:'50px'}}>\r\n                    <Input type=\"email\" name=\"email\" id=\"total\" placeholder=\"harga\" onChange={this.handleOnchange} ref='angka'/>\r\n                    <br/>\r\n                    <Button color=\"primary\" size=\"sm\" onClick={this.setState}>+</Button>\r\n                    <h1>0</h1>\r\n                    <Button color=\"primary\" size=\"sm\">-</Button>\r\n                    <h1>Rp </h1>\r\n                </FormGroup>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default latihan2","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nclass latihan3 extends React.Component{\r\n    //buat state dulu\r\n    //abis itu bikin function nya terus baru setState satu\"\r\n    state = {jumlah : ''}\r\n    handleOnChange = () =>{\r\n        var kata = this.refs.textarea.text.value\r\n        var newOne = kata.replace(/a|i|u|e|o/g, '')\r\n        this.setState({jumlah : newOne})\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\" style={{marginTop:'30px'}}>\r\n            <Form className=\"col-md-6\">\r\n                <FormGroup>\r\n                    <Label for=\"exampleText\" >Enter words</Label>\r\n                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" onChange={this.handleOnChange} ref='text' />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <h1>{this.state.jumlah}</h1>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default latihan3","import React, { Component } from 'react';\r\nimport Footer from './components/footer'\r\nimport Navbar from './components/header'\r\nimport Form from './components/form'\r\nimport Homepage from './components/homepage'\r\nimport Product from './components/product'\r\nimport TxtArea from './components/txtarea';\r\nimport LatihanDua from './components/latihanDua';\r\nimport LatihanTiga from './components/latihanTiga';\r\nimport {Route} from 'react-router-dom'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  btnClick = () => {\r\n    alert('Masuk')\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar/>\r\n        <div className='container'>\r\n          <Route path='/form' component={Form} />\r\n          <Route path='/products' component={Product} />\r\n          <Route path='/' component={Homepage} exact />\r\n          <Route path='/txtArea' component={TxtArea}/>\r\n          <Route path='/latihandua' component={LatihanDua}/>\r\n          <Route path='/latihantiga' component={LatihanTiga}/>\r\n        </div>\r\n        <Footer/>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux' \r\n\r\nimport GlobalState from './2.reducers'\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst variabelGlobal = createStore(GlobalState)\r\nReactDOM.render(<Provider store={variabelGlobal}>\r\n                <BrowserRouter>\r\n                <App/>\r\n                </BrowserRouter>\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}